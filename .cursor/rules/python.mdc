---
description: Python Code Style Guide
globs: *.py
alwaysApply: true
---

# Python Coding Style Guide

Follow these style conventions for all Python code in this project:

## General Formatting
- Follow PEP 8 conventions
- Use [ruff.toml](mdc:ruff.toml) for configuration

## Naming Conventions
- Classes: CamelCase (e.g., `MyClass`)
- Functions/Methods: snake_case (e.g., `my_function`)
- Variables: snake_case (e.g., `my_variable`)
- Constants: UPPER_SNAKE_CASE (e.g., `MY_CONSTANT`)
- Private attributes/methods: prefix with underscore (e.g., `_private_method`)

## Imports
- Group imports in this order: standard library, third-party, local application
- One import per line
- Avoid wildcard imports (`from module import *`)
- Use absolute imports over relative imports

## String Formatting
- Prefer f-strings for string formatting
- Use single quotes for strings unless double quotes avoid backslashes

## Comments
- Docstrings only for complex functions/methods
- Use Google-style docstrings
- Inline comments only when necessary to explain non-obvious code to an advanced user

## Type Hints
- Use type hints for function parameters and return values
- Use typing module for complex types